/*! ****************************************************************************
\ingroup SPEC_MATH_RAND_GEN_GROUP
\struct random_t
\brief Структура параметров датчиков псевдослучайных чисел.

Структура хранит инициализацию и текущие регистры различных датчиков 
псевдослучайных чисел. В библиотеке используются следующие датчики: 
\li MRG32K3A -- 32 битный датчик разработан Пьером Лекуэром [1]. 
\li MT19937-64 -- 64-битный датчик 
    <a href = "https://en.wikipedia.org/wiki/Mersenne_Twister">
	Вихрь Мерсенна 
	</a> [2, 3]. 

\note
[1] Pierre L'Ecuyer, (1999) Good Parameters and Implementations for Combined 
    Multiple Recursive Random Number Generators. Operations Research 
	47(1):159-164. https://doi.org/10.1287/opre.47.1.159 \n\n
[2] T. Nishimura, ``Tables of 64-bit Mersenne Twisters // ACM Transactions
    on Modeling and Computer Simulation 10. (2000) 348--357. \n\n
[3] M. Matsumoto and T. Nishimura  Mersenne Twister: a 623-dimensionally
    equidistributed uniform pseudorandom number generator // ACM Transactions
    on Modeling and Computer Simulation 8. (Jan. 1998) 3--30.  \n\n

\param  mrg32k3a_seed
Начальная инициализация датчика MRG32K3A. \n \n


\param  mrg32k3a_x
Первый вектор состояния рекурсивного датчика MRG32K3A. \n \n

\param  mrg32k3a_y
Второй вектор состояния рекурсивного датчика MRG32K3A. \n \n

\param  mt19937_mt
Первый вектор состояния рекурсивного датчика MT19937-64. \n \n

\param  mt19937_mti
Текущий индекс в векторе состояния датчика MT19937-64. \n \n

Параметры данной структуры заполняются автоматически функцией `random_init` 
и используются функциями генерации псевдослучайных векторов. 

\author
Бахурин Сергей.
www.dsplib.org 
***************************************************************************** */






/*! ****************************************************************************
\ingroup SPEC_MATH_RAND_GEN_GROUP
\fn int random_init(random_t* prnd, int type, void* seed)
\brief 
Инициализация датчиков псевдослучайных чисел. 

\param[in,out]  prnd
Указатель на структуру параметров и векторов состояния 
датчиков псевдослучайных чисел, которая будет инициализирована. \n\n

\param[in]  type
Тип датчика псевдослучайных чисел:
\verbatim
RAND_TYPE_MRG32K3A - 32-битный датчик MRG32K3A
RAND_TYPE_MT19937  - 64-битный датчик MT19937-64
\endverbatim

\param[in]  seed
Указатель на начальную инициализацию датчика. \n
Данный указатель имеет тип `void*`, поскольку параметр инициализации
зависит от типа датчика. Например если инициализируем датчик MRG32K3A,
т.е. параметр `type` задан как `RAND_TYPE_MRG32K3A`, то данный указатель 
приводится к типу `double`:
\code
  random_t rnd = {0};
  double seed = 1234.0;
  random_init(&rnd, RAND_TYPE_MRG32K3A, (void*)&seed);
\endcode
Если же используется 64-битный датчик Вихрь Мерсенна 
(`type` задан как `RAND_TYPE_MT19937`), то `seed` приводится к типу 
`unsigned long long`:
\code
  random_t rnd = {0};
  unsigned long long = 1234353456;
  random_init(&rnd, RAND_TYPE_MT19937, (void*)&seed);
\endcode
При фиксированном начальном значении датчика, псевдослучайные числа будут
повторяться при каждом запуске программы. \n
Указатель `seed` может быть `NULL`. В этом случае начальная инициализация 
датчиков будет задаваться случайными значениями и генерируемые псевдослучайные 
числа будут различными при каждом запуске программы.

\author
Бахурин Сергей.
www.dsplib.org
****************************************************************************  */






/*! ****************************************************************************
\ingroup SPEC_MATH_RAND_GEN_GROUP
\fn int randn(double* x, int n, double mu, double sigma)

\brief 
Генерация вектора  нормально распределенных псевдослучайных чисел с 
заданным математическим  ожиданием и среднеквадратичным отклонением.

Генерация производится при помощи преобразования Бокса — Мюллера равномерно-распределенной
случайной величины в нормально распределенную. \n



\param[in,out] x
Указатель на вектор нормальной распределенных случайных чисел.  \n
Размер вектора `[n x 1]`. \n
Память должна быть выделена. \n 
\n
      
\param[in] n  
Размер вектора случайных чисел. \n 
\n

\param[in] mu 
Математическое ожидание. \n 
\n

\param[in] sigma 
Среднеквадратичное отклонение (СКО). \n 
\n

\return
`RES_OK` --- вектор случайных чисел рассчитан успешно. \n
В противном случае \ref ERROR_CODE_GROUP "код ошибки".

\author
Бахурин Сергей.
www.dsplib.org
***************************************************************************** */





/*! ****************************************************************************
\ingroup SPEC_MATH_RAND_GEN_GROUP
\fn int randu(double* x, int n, random_t* prnd)
\brief 
Генерация вектора равномерно-распределенных в интервале 
от 0 до 1 псевдослучайных чисел.

\param[in,out] x  
Указатель на вектор случайных чисел.  \n
Размер вектора `[n x 1]`. \n
Память должна быть выделена. \n\n
      
\param[in] n
Размер вектора случайных чисел. \n\n

\param[in] prnd
Указатель на структуру `random_t` параметров датчиков
псевдослучайных чисел. \n
Структура должна быть предварительно заполнена функцией \ref random_init. \n
 Данный указатель может быть `NULL`, тогда будет использоваться 
встроенный датчик, определенный стандартом языка Си. Однако для серьезных нужд, 
например в криптографии, данный режим использовать не рекомендуется. 
Нет гарантии в качестве произведенной случайной последовательности если 
параметр `prnd` задан как `NULL`. \n\n

\return
`RES_OK` --- вектор равномерно-распределенных 
псевдослучайных чисел рассчитан успешно. \n
В противном случае \ref ERROR_CODE_GROUP "код ошибки".

\author
Бахурин Сергей.
www.dsplib.org
***************************************************************************** */


