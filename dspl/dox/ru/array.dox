
/*! ****************************************************************************
\ingroup SPEC_MATH_COMMON_GROUP
\fn int concat(void* a, size_t na, void* b, size_t nb, void* c) 
\brief Конкатенация двух массивов данных

Функция производит конкатенацию двух массивов. Пусть массивы `a` и `b` 
заданы как векторы:<BR>
`a = [a(0), a(1), ... a(na-1)]`, <BR>
`b = [b(0), b(1), ... b(nb-1)]`, <BR>
тогда результатом конкатенации будет вектор размера `na+nb` вида:<BR>
`c = [a(0), a(1), ... a(na-1), b(0), b(1), ... b(nb-1)]`.


\param[in]  a   Указатель на первый вектор `a`.<BR>
                Размер вектора `na` байт.<BR><BR>

\param[in]  na  Размер первого вектора `a` в байт.<BR><BR>

\param[in]  b   Указатель на второй вектор `b`.<BR>
                Размер памяти вектора `nb` байт.<BR><BR>

\param[in]  nb  Размер второго вектора `b` в байт.<BR><BR>

\param[out] c   Указатель на вектор конкатенации `c`.<BR>
                Размер памяти вектора `na + nb` байт.<BR>
                Память должна быть выделена.<BR><BR>

\return
`RES_OK` если функция выполнена успешно.<BR>
 В противном случае \ref ERROR_CODE_GROUP "код ошибки".
 
Функция использует указатели типа `void*` и может быть использована для 
конкатенации данных различного типа.<BR>
Например конкатенация массивов типа `double`:
\code
double a[3] = {1.0, 2.0, 3.0};
double b[2] = {4.0, 5.0};
double c[5];

concat((void*)a, 3*sizeof(double), (void*)b, 2*sizeof(double), (void*)c);
\endcode 
в результате вектор `c` будет хранить массив данных:
\code
c = [1.0, 2.0, 3.0, 4.0, 5.0]
\endcode 

\author
Бахурин Сергей
www.dsplib.org
**************************************************************************** */



