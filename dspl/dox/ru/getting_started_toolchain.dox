/*! \page getting_started_toolchain Установка DSPLIB toolchain в системе Windows

\section download_toolchain_windows Загрузка установщика

Запуск DSPL в системе Windows требует установки компилятора, Unix-утилит, и
пакета построения графиков GNUPlot. Также желательно установить консольный
файловый менеджер Far и IDE для разработки и отладки программ. \n
Для установки всего необходимого софта предлагается скачать и установить 
DSPLIB toolchain - полный набор утилит необходимых для работы с библиотекой. \n
<a href = "http://ru.dsplib.org/dsplib_toolchain_19_10_win_x64.exe">
Скачать установщик dsplib_toolchain_19_10_win_x64.exe
</a> (~217 МБ).




\section install_gcc Установка DSPLIB toolchain в системе Windows

Запускаем установщик и выбираем директорию в которую будет произведена установка
всех компонент.

\image html toolchain_1.png

По умолчанию установка производится по адресу `C:\dsplib`.

\note Настоятельно рекомендуется устанавливать все компоненты в каталог 
`C:\dsplib`, потому что IDE CodeBlocks и другие программы настроены на 
работу именно из этого каталога.

После нажатия кнопки `[Установить]` начнется процесс копирования пакетов в 
указанный каталог.


\image html toolchain_2.png

По завершению копирования файлов указанные пути будут прописаны в переменной 
PATH, а на рабочем столе будут созданы иконки FarManager и IDE CodeBlocks. \n
Для завершения установки необходимо нажать `[Завершить]`.

\image html toolchain_3.png

Перейдя в каталог `C:\dsplib` можно увидеть следующие установленные пакеты:

\image html toolchain_4.png

`codeblocks` -- IDE CodeBlocks \n

`farmanager` -- Консольный файловый менеджер. Очень удобен для запуска 
                консольных приложений \n
                
`gnuplot`    -- Многофункциональный пакет построения графиков. \n

`mingw64`    -- Набор компиляторов gcc для языков C, C++ и FORTRAN 
                (для BLAS и LAPACK). \n 
                
`UnxUtils`   -- Windows интерфейс для Unix утилит. 
                Необходимо для поддержки кроссплатформенной 
                компиляции проекта. \n 
                
`Uninstall.exe` -- Деинсталлятор, способный удалить все 
                   компоненты и переменные `PATH`.

После того как полный набор утилит и программ установлен можно переходить к 
сборке библиотеки DSPL. 


Теперь вы можете производить сборку библиотеки и работать с ней. \n \n


\section getting_started_make Компиляция libdspl-2.0 утилитой make


Предварительно необходимо установить все необходимые утилиты. 
Если этот шаг не сделан, то смотри раздел: \n \n 
 
\ref getting_started_toolchain

\n
\n

Скачиваем 
<a href="https://github.com/Dsplib/libdspl-2.0">
с сайта Github.com
</a>
исходные коды DSPL:

\image html dspl_github.png

Разархивируем в рабочий каталог.

Вы можете разархивировать в любой каталог, `libdspl-2.0` будет
обозначать каталог, в который разархивированы исходные коды.

В качестве примера, исходные коды были разархивированы в 
каталог `J:\libdspl-2.0`. \n

Переходим в указанный каталог: \n

\image html libdspl_dir.png

Выделяем в строку адреса и вводим туда `cmd`: \n

\image html libdspl_cmd.png

В результате откроется консоль Windows в которую можно вводить команды. \n

Вводим команду `ming32-make`:\n

\image html winconsole_1.png

После нажатия `[Enter]` начнется сборка всех компонент библиотеки. 
\note Время первой сборки зависит от производительности компьютера и может 
      занимать от двух до двадцати минут. Последующие сборки будут значительно 
      быстрее, потому что при первой сборке компилируются библиотеки BLAS и 
      LAPACK, которые линкуются в дальнейшем из готовых объектных файлов.

После сборки проекта можно перейти в каталог `bin` в котором сохранены 
программы примеры. Также в данном каталоге можно найти готовую библиотеку 
`libdspl.dll`:

\image html libdspl_bin.png

На этом установка всех компонент и сборка проекта окончена.

\n \n
*/


