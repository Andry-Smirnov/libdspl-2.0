
/*! ****************************************************************************
\ingroup DFT_GROUP
\fn int goertzel(double *x, int n, int *ind, int k, complex_t *y)
\brief 
<a href = "http://en.dsplib.org/content/goertzel/goertzel.html">
Goertzel algorithmf 
</a> 
individual DFT samples calculation for the real input vector `x`.

Goertzel algorithm calculates `k` samples of `n`-point DFT, according to 
`ind` indexes vector.



\param[in]  x
Pointer to the real input vector `x` \n
Vector size is `[n x 1]`. \n 
\n

\param[in]  n
Size of vector `x`. \n 
\n

\param[in]  ind
Pointer to the DFT samples indexes which need 
to calculate by Goertzel algorithm. \n
Vector size is `[k x 1]`. \n 
\n

\param[in]  k
Size of vector `ind`. \n 
\n

\param[out]  y
Pointer to the DFT samples vector corresponds to indexes `ind`. \n
Vector size is `[k x 1]`. \n
Memory must be allocated. \n 
\n

\return
`RES_OK` if function is calculated successfully. \n 
Else \ref ERROR_CODE_GROUP "code error".

\note
Goertzel's algorithm is effective when it is necessary to calculate 
several DFT samples of a signal of long duration. \n
However, the size `k` of the vector of indices` ind` can be arbitrary, 
including more than the length of the signal `n`.
In this case, some DFT samples will be repeated, but this will not entail 
a runtime error. \n
The values of the indices of the DFT spectral samples `ind` 
can also be arbitrary integers, including negative ones.
In this case, the DFT samples will be calculated.
with indices modulo `n`. \n

\author Sergey Bakhurin www.dsplib.org
***************************************************************************** */





/*! ****************************************************************************
\ingroup DFT_GROUP
\fn int goertzel_cmplx(complex_t *x, int n, int *ind, int k, complex_t *y)
\brief 
<a href = "http://en.dsplib.org/content/goertzel/goertzel.html">
Goertzel algorithmf 
</a> 
individual DFT samples calculation for the complex input vector `x`.

Goertzel algorithm calculates `k` samples of `n`-point DFT, according to 
`ind` indexes vector.



\param[in]  x
Pointer to the complex input vector `x` \n
Vector size is `[n x 1]`. \n 
\n

\param[in]  n
Size of vector `x`. \n 
\n

\param[in]  ind
Pointer to the DFT samples indexes which need 
to calculate by Goertzel algorithm. \n
Vector size is `[k x 1]`. \n 
\n

\param[in]  k
Size of vector `ind`. \n 
\n

\param[out]  y
Pointer to the DFT samples vector corresponds to indexes `ind`. \n
Vector size is `[k x 1]`. \n
Memory must be allocated. \n 
\n

\return
`RES_OK` if function is calculated successfully. \n 
Else \ref ERROR_CODE_GROUP "code error".

\note
Goertzel's algorithm is effective when it is necessary to calculate 
several DFT samples of a signal of long duration. \n
However, the size `k` of the vector of indices` ind` can be arbitrary, 
including more than the length of the signal `n`.
In this case, some DFT samples will be repeated, but this will not entail 
a runtime error. \n
The values of the indices of the DFT spectral samples `ind` 
can also be arbitrary integers, including negative ones.
In this case, the DFT samples will be calculated.
with indices modulo `n`. \n

\author Sergey Bakhurin www.dsplib.org
***************************************************************************** */
